@model PaginationVm<IEnumerable<CategoryListItemVm>>
@{
    Layout = null;
}

<style>
    .pagination .page-item.disabled:hover a {
        background-color: grey;
        cursor: not-allowed;
    }

    #actionbut {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        width: 16%;
        justify-content: space-between;
    }
</style>


@foreach (var item in Model.Items)
{
    <article style="width:1123px;">
        <div class="row align-items-center" style="width:100%;margin-bottom:10px">
            <div class="col col-check flex-grow-0" style="width:5%">
                <div class="form-check">
                    <input class="form-check-input item-checkbox" type="checkbox">
                </div>
            </div>
            <div class="col-lg-2 col-sm-2 col-4 col-price" style="width:15%"> @item.Name </div>
            <div class="col-lg-2 col-sm-2 col-4 col-status" style="width:9%">
                @if (item.IsArchived)
                {
                    <span class="badge rounded-pill alert-warning">Archived</span>
                }
                else if (item.IsDeleted)
                {
                    <span class="badge rounded-pill alert-danger">Disabled</span>
                }
                else
                {
                    <span class="badge rounded-pill alert-success">Active</span>
                }
            </div>
            <div class="col-lg-1 col-sm-2 col-4 col-date" style="width:45%">
                <span>@item.CreatedTime</span>
            </div>
            <div class="col-lg-2 col-sm-2 col-4 col-action text-end action-buttons" id="actionbut">
                @if (!item.IsDeleted && !item.IsArchived)
                {
                    <a asp-action="Archived" asp-route-id="@item.Id" class="btn btn-sm font-sm rounded btn-brand" style="background-color:orange">
                        <i class="material-icons md-edit"></i> Archive
                    </a>
                }

                @if (item.IsDeleted)
                {
                    <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm font-sm rounded btn-brand">
                        <i class="material-icons md-edit"></i> Edit
                    </a>
                }
                else if (!item.IsDeleted && item.IsArchived)
                {
                    <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm font-sm rounded btn-brand">
                        <i class="material-icons md-edit"></i> Edit
                    </a>
                }
                else
                {
                    <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm font-sm rounded btn-brand">
                        <i class="material-icons md-edit"></i> Edit
                    </a>
                }

                @if (item.IsDeleted)
                {
                    <a asp-action="RestoreProduct" asp-route-id="@item.Id" class="btn btn-sm font-sm btn-light rounded" style="color:white ;background:orange">
                        Restore
                    </a>
                }
                else if (item.IsArchived)
                {
                    <a asp-action="RestoreArchiveProduct" asp-route-id="@item.Id" class="btn btn-sm font-sm btn-light rounded" style="color:white ;background:orange">
                        Restore
                    </a>
                }
                else
                {
                    <a asp-action="DeleteProduct" asp-route-id="@item.Id" class="btn btn-sm font-sm btn-light rounded">
                        <i class="material-icons md-delete_forever"></i> Delete
                    </a>
                }
                @if (item.IsDeleted)
                {
                    <a asp-action="DeleteFromData" asp-route-id="@item.Id" class="btn btn-sm font-sm btn-light rounded remove-button" style=" color:white ;background-color: grey;">
                        <i class="material-icons md-delete_forever"></i> Remove
                    </a>
                }
                else if (item.IsArchived)
                {
                    <a asp-action="DeleteFromData" asp-route-id="@item.Id" class="btn btn-sm font-sm btn-light rounded remove-button" style=" color:white ;background-color: grey;">
                        <i class="material-icons md-delete_forever"></i> Remove
                    </a>
                }
            </div>
        </div>
    </article>


}
@if (ViewBag.Message != null)
{
    <p style="text-align:center;font-size:20px;color:red">@ViewBag.Message</p>
}



<div class="pagination-area mt-30 mb-50">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-start" id="prod-pag">
            <li class="page-item @(Model.HasPrev?"":"disabled")">
                <a class="page-link" asp-action="ProductPagination" asp-route-page="@(Model.CurrentPage-1)" asp-route-count="4" style="width:43px"><</a>
            </li>
            @for (int i = 1; i <= Model.LastPage; i++)
            {
                <li class="page-item @(i==Model.CurrentPage? "active":"")">
                    <a class="page-link" asp-action="ProductPagination" asp-route-page="@i" asp-route-count="4" style="width:44px">0 @i</a>
                </li>
            }
            <li class="page-item @(Model.LastPage > 1 && Model.HasNext ? "" : "disabled")">
                <a class="page-link" asp-action="ProductPagination" asp-route-page="@(Model.CurrentPage+1)" asp-route-count="4" style="width:43px">></a>
            </li>
        </ul>
    </nav>
</div>